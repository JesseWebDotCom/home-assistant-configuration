alarm_control_panel:
#----------------------------------------------------------------
  - platform: manual
    name: home_alarm
    code: !secret alarm_code
    pending_time: 30
    delay_time: 20
    trigger_time: 4
    disarmed:
      trigger_time: 0
    armed_home:
      pending_time: 0
      delay_time: 0

automation:
#----------------------------------------------------------------            

  # - alias: NOTIFY (LOW) BATTERY
  #   trigger:
  #     - platform: time
  #       minutes: '/15'
  #       seconds: 00
  #   condition:
  #     - condition: template
  #       value_template: >
  #         # this is the threshold, if the battery goes below 10, the alert will occur.
  #         {% set battery_alert_threshold = 10 %}
  #         # the next templateline is complicated.  It selects
  #         # the any objects that have the battery attribute.  Then compares the battery
  #         # attribute to the battery_alert_threshold.  If the battery is less than the threshold
  #         # it adds the item to a list.  If the list is greater than or equal to 1 item,
  #         # the template will return True, otherwise false.
  #         {{ states | selectattr('attributes.battery_level', 'defined') | selectattr('attributes.battery_level','<', battery_alert_threshold ) | list | length >= 1 }}

  #   action:
  #     service: notify.telegram_jesse
  #     data_template:
  #       message: >
  #         {% set low_batteries = states | selectattr('attributes.battery_level', 'defined') | selectattr('attributes.battery_level','<', battery_alert_threshold ) | map(attribute='name') | list | join(', ') %}
  #         Low batteries in the following devices: {{ low_batteries }}
  #       title: "LOW BATTERY"

  # DOORS
  #----------------------------------------------------------------

  # Alert when doors open and close
  # - alias: PUSH (OPEN CLOSE) Door
  #   hide_entity: True
  #   trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.front_door
  #         - cover.garage_door
  #         - binary_sensor.kitchen_door
  #         - binary_sensor.mudroom_door
  #         - binary_sensor.storage_room_door
  #         - binary_sensor.storage_room_freezer_door
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: template
  #         value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  #       - condition: state
  #         entity_id: input_boolean.options_notifications_push
  #         state: 'on'
  #   action:
  #     - service: notify.telegram_jesse
  #       data_template:
  #         message: >
  #           {%- if (trigger.to_state.state == "on") -%}
  #             {{ trigger.to_state.attributes.friendly_name }} Opened
  #           {%- else -%}
  #             {{ trigger.to_state.attributes.friendly_name }} Closed
  #           {% endif %}
  #         title: ""
  #         # title: >-
  #         #   {%- if is_state("alarm_control_panel.alarm", "armed_away") or
  #         #     is_state("alarm_control_panel.alarm", "armed_home") -%}
  #         #     ALARM TRIGGERED -
  #         #   {%- else -%}
  #         #   {%- endif %}

  # - alias: CHIME (OPEN) Door
  #   hide_entity: True
  #   trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.front_door
  #         - binary_sensor.garage_door
  #         - binary_sensor.kitchen_door
  #         - binary_sensor.mudroom_door
  #         - binary_sensor.storage_room_door
  #       to: 'on'
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: template
  #         value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  #       - condition: state
  #         entity_id: input_boolean.options_notifications_chime
  #         state: 'on'
  #   action:
  #     service: media_player.play_media
  #     data:
  #       entity_id: media_player.home_cast
  #       media_content_id: !secret chime_open_door
  #       media_content_type: 'audio/mp4'


  # - alias: PUSH (OPEN) Door for 10 Minutes
  #   trigger:
  #     platform: state
  #     entity_id:
  #         - binary_sensor.front_door
  #         - binary_sensor.garage_door
  #         - binary_sensor.kitchen_door
  #         - binary_sensor.mudroom_door
  #         - binary_sensor.storage_room_door
  #         - binary_sensor.storage_room_freezer_door
  #     to: 'on'
  #     for:
  #       minutes: 10
  #   action:
  #     service: notify.telegram_jesse
  #     data_template:
  #       message: >
  #           ALERT - {{ trigger.to_state.attributes.friendly_name | upper }} LEFT OPEN
  #       title: ""

  # - alias: CHIME (OPEN) Door for 10 Minutes
  #   trigger:
  #     platform: state
  #     entity_id:
  #         - binary_sensor.front_door
  #         - binary_sensor.garage_door
  #         - binary_sensor.kitchen_door
  #         - binary_sensor.mudroom_door
  #         - binary_sensor.storage_room_door
  #         - binary_sensor.storage_room_freezer_door
  #     to: 'on'
  #     for:
  #       minutes: 10
  #   action:
  #     service: media_player.play_media
  #     data:
  #       entity_id: media_player.home_cast
  #       media_content_id: !secret chime_open_door_10_min
  #       media_content_type: 'audio/mp4'

binary_sensor:
#----------------------------------------------------------------

  - platform: mqtt
    name: "House Rear Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/house_rear_motion/state"
    payload_on: "ON"
    payload_off: "OFF"

  - platform: mqtt
    name: "Driveway Rear Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/driveway_rear_motion/state"
    payload_on: "ON"
    payload_off: "OFF"    

  - platform: mqtt
    name: "Driveway Front Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/driveway_front_motion/state"
    payload_on: "ON"
    payload_off: "OFF"   

  - platform: mqtt
    name: "Front Left Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/front_left_motion/state"
    payload_on: "ON"
    payload_off: "OFF"   

  - platform: mqtt
    name: "Sunroom Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/sunroom_motion/state"
    payload_on: "ON"
    payload_off: "OFF"  

  - platform: mqtt
    name: "Front Center Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/front_center_motion/state"
    payload_on: "ON"
    payload_off: "OFF"   

  - platform: mqtt
    name: "Front Right Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/front_right_motion/state"
    payload_on: "ON"
    payload_off: "OFF"  

  - platform: mqtt
    name: "Porch Under Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/porch_under_motion/state"
    payload_on: "ON"
    payload_off: "OFF"           

  - platform: mqtt
    name: "Rear Left Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/rear_left_motion/state"
    payload_on: "ON"
    payload_off: "OFF"   

  - platform: mqtt
    name: "Porch Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/porch_motion/state"
    payload_on: "ON"
    payload_off: "OFF"   

  - platform: mqtt
    name: "Side Stairs Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/side_stairs_motion/state"
    payload_on: "ON"
    payload_off: "OFF"  

  - platform: mqtt
    name: "Pool Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/pool_motion/state"
    payload_on: "ON"
    payload_off: "OFF"       

  - platform: mqtt
    name: "Front PTZ Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/front_ptz_motion/state"
    payload_on: "ON"
    payload_off: "OFF"   

  - platform: mqtt
    name: "Front Door Camera Motion"
    device_class: motion
    state_topic: "blue_iris/binary_sensor/front_door_motion/state"
    payload_on: "ON"
    payload_off: "OFF"   

  - platform: template
    sensors:

                            # is_state('binary_sensor.exterior_problems', 'on') or
      home_problems:
        value_template: "{{ is_state('binary_sensor.upstairs_problems', 'on') or
                            is_state('binary_sensor.cars_problems', 'on') or
                            is_state('binary_sensor.downstairs_problems', 'on') }}"

      home_security:
        device_class: safety
        value_template: >-
            off
#             {% if is_state('alarm_control_panel.home_alarm', 'disarmed') %}
# pending
# armed_home
#
#               mdi:security-close
#             {% else %}
#               mdi:shield
#             {% endif %}

        icon_template: >-
            {% if is_state('binary_sensor.home_security', 'on') %}
              mdi:security-close
            {% else %}
              mdi:shield
            {% endif %}

      # is_state('binary_sensor.exterior_occupancy', 'on') or
      home_occupancy:
        value_template: "{{ is_state('binary_sensor.upstairs_occupancy', 'on') or
                  is_state('binary_sensor.downstairs_occupancy', 'on') }}"

script:
#----------------------------------------------------------------

  home_poweroff_all:
    alias: "Home | Power Off All"
    sequence:
      - service: script.turn_on
        data:
          entity_id:
            - script.upstairs_poweroff_all
            - script.downstairs_poweroff_all
            # - script.exterior_poweroff_all

  telegram_front_door_photo:
    alias: 'Front Door | Telegram'
    sequence:
      - service: notify.telegram_jesse
        data_template:
          title: "{{ title }}"
          message: "{{ message }}"
          data:
            video:
              - url: '{{ states.sensor.camera_front_door_last_clip.state }}'
                username: !secret camera_username
                password: !secret camera_password
                caption: "{{ caption }}"                                   

sensor:
#----------------------------------------------------------------

          # {% set total = total + states.sensor.exterior_on.state|int%}
  - platform: template
    sensors:
      home_on:
        unit_of_measurement: ' '
        value_template: >-
          {% set total = 0 %}

          {% set total = total + states.sensor.upstairs_on.state|int%}
          {% set total = total + states.sensor.downstairs_on.state|int%}

          {{total}}
        icon_template: >-
            {% if states.sensor.home_on.state|int > 0 %}
              mdi:power-plug
            {% else %}
              mdi:power-plug-off
            {% endif %}

  - platform: template
    sensors:
      home_open:
        unit_of_measurement: ' '
        value_template: >-
          {% set total = 0 %}

          {% set total = total + states.sensor.upstairs_open.state|int%}
          {% set total = total + states.sensor.downstairs_open.state|int%}
          {% set total = total + states.sensor.cars_open.state|int%}

          {{total}}
        icon_template: >-
            {% if states.sensor.home_open.state|int > 0 %}
              mdi:door-open
            {% else %}
              mdi:door
            {% endif %}



# sensor.samjin_button_010050d2_1_1026 = temp
# binary_sensor.samjin_button_010050d2_1_1280 = single button click
# when pressed, switch to on (and stayed there)

# zha.zha_samjin_button_010050d2 (battery_level / 2)